using System;
using System.Collections.Generic;
using System.Text;

/// <summary>
/// A check template to be used to define a new system check
/// </summary>
internal abstract class CheckTemplate
{
    //Specifications (since i literally cant think rn)

    //GetState() -> Offline? -> Score += (Failed? -score : State = expected ? score : 0)
    //              Online?  -> NetComm(CID,STATEVALUE)

    //ONLINE SPEC: CANNOT TICK MORE THAN 1 TIME PER SECOND, MUST GET BATCHED (bandwith limiting)
    //ONLINE SPEC: Consolidate data. IE: Hash strings using a crc32, everything else is a number at or below 4 bytes. All states are reported as integers.
    //ONLINE SPEC: Batch sizes should be less than [1024] byte returns
    //ONLINE SPEC: Online batch ticking should be equal to or slower than internal ticking. Ticks are only called when the value is being batched for sending

    //OFFLINE SPEC: Min tickrate = 1ms, default = 1000ms, max = 300000ms
    //OFFLINE SPEC: Still hash strings with crc32
    //OFFLINE SPEC: Must return a score


    //Implementation Specifications

    //Returns the value of the check to communicate between networks
    //internal abstract uint GetOnlineState()

    //Returns the score of the state
    //internal abstract uint GetOfflineState()
    

}
