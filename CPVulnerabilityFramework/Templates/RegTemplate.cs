using System.Threading.Tasks;
using Microsoft.Win32;

internal class RegTemplate : CheckTemplate
{
    private RegistryKey RegKey;
    private readonly RegistryKey Root;
    private readonly SafeString RegVal;
    private readonly SafeString RegPath;

    internal override async Task<uint> GetCheckValue()
    {
        if(RegKey == null)
        {
            try
            {
                RegKey = Root.OpenSubKey(RegPath);
            }
            catch
            {
                return 0;
            }
        }
        try
        {
            var value = await Task.FromResult<uint>(PrepareState(RegKey.GetValue(RegVal)));
            return value;
        }
        catch
        {
            return 0u;
        }
    }

    internal RegTemplate(params string[] args)
    {
        if (args.Length < 3)
        {
            Enabled = false;
            return;
        }

        Root = null;
        RegPath = args[1];
        RegVal = args[2];
        
        switch (args[0].ToUpper())
        {
            case "HKEY_CLASSES_ROOT":
            case "CLASSES_ROOT":
            case "CLASSESROOT":
            case "CLASSES":
                Root = Registry.ClassesRoot;
                break;
            case "HKEY_CURRENT_CONFIG":
            case "CURRENT_CONFIG":
            case "CURRENTCONFIG":
            case "CONFIG":
                Root = Registry.CurrentConfig;
                break;
            case "HKEY_CURRENT_USER":
            case "CURRENT_USER":
            case "CURRENTUSER":
            case "USER":
                Root = Registry.CurrentUser;
                break;
            case "HKEY_PERFORMANCE_DATA":
            case "PERFORMANCE_DATA":
            case "PERFORMANCEDATA":
            case "PERFORMANCE":
                Root = Registry.PerformanceData;
                break;
            case "HKEY_USERS":
            case "USERS":
                Root = Registry.Users;
                break;
            default:
                Root = Registry.LocalMachine;
                break;
        }
        try
        {
            RegKey = Root.OpenSubKey(args[1]);
        }
        catch
        {
        }
    }
}